=>REACT:

npx create-react-app myapp=>for creating new react app with name myapp
npm start=>in my app use for starting the development server(like liveserver)

=>BUNDLE:

u shouldnt send all js files to server when u put website on production.use command to will create a
bundle
All our js files=>transpile=>index.html and bundle.js
Transpiling is a specific term for taking source code written in one language and transforming into
another language that has a similar level of abstraction.

=>BUILDING REACT APP FROM SCRATCH

Now delete all files in src and we ll build react app froms scratch:
First thing index.js is required for the npm start.All our logic is in index.js.
We have index.html file in public folder that contains html and logic is in index.js
if we empty our index.js then blank screen will appear.

=>WHATS INSIDE IN INDEX.JS?

import React from 'react'; >Every time u build u have to include this
import ReactDOM from 'react-dom'; >to connect out index.js and index.html file (How to read DOM and cnnect with index.html)

Component:Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML.

Components come in two types, Class components and Function components, in this tutorial we will concentrate on Function components.
ReactDOM.render(app,document.getElementById('root')) if u pass like this it will think that app is functions
and will give an error so we have to write <app/> now it will think it as a component.
// Before
import { render } from 'react-dom';
const container = document.getElementById('app');
render(<App tab="home" />, container);
// After
import { createRoot } from 'react-dom/client';
const container = document.getElementById('app');
const root = createRoot(container); // createRoot(container!) if you use TypeScript
root.render(<App tab="home" />);
before one working but throwing error as it is not suported in react18
When we return html in component it is not html it is jsx.At backend it is converted into html 
to be rendered.

=>Behind the scenes:
As we know in component when we return something it is .jsx not html so how it is rendered??
it is shown in code that we return it in html format react convert it into .jsx